#!/usr/bin/python

import itertools
import os
import lxml.html
from lxml.html import builder as E


import cachefetch
import blogpost
import sequence
import sequences

os.mkdir("target")

def scrape_all(start_url, sequencer):
    posts = list(collect_urls(start_url, sequencer))
    read_articles(posts)
    codemap = fix_urls(posts)
    sequencelist = make_sequences(codemap)
    write_posts(posts)
    write_index(posts)
    write_sequences(sequencelist)
    print "Done"

def collect_urls(start_url, sequencer):
    print "Collecting URLs"
    url = start_url
    for seq in sequencer:
        print "...", url
        post = blogpost.Blogpost(seq, url)
        yield post
        url = post.get_nexturl()
        if url is None:
            break

def read_articles(posts):
    print "Reading articles"
    for i, post in enumerate(posts):
        print u"{0:3}/{1:3} {2}".format(i+1, len(posts), post.url)
        post.read()

def fix_urls(posts):
    print "Fixing URLs"
    codemap = dict((p.code, p) for p in posts)
    for post in posts:
        post.fix_urls(codemap)
    return codemap

def make_sequences(codemap):
    print "Making Sequences"
    for title, url, xpath in sequences.sequences:
        print "    ", title
        seq = sequence.Sequence(title)
        lx = cachefetch.get_html_from_url(url)
        for href in lx.xpath(xpath):
            code = blogpost.urltocode(href)
            if code is not None and code in codemap:
                p = codemap[code]
                seq.append(p)
                p.addseq(seq)
            #else:
            #    print "    ", href
        yield seq

def write_posts(posts):
    print "Writing posts"
    for post in posts:
        post.write()

def write_index(posts):
    print "Writing index"
    with open("target/index.html", "w") as f:
        f.write(lxml.html.tostring(
            E.HTML(
                E.HEAD(
                    E.TITLE("Eliezer Yudkowsky blog posts, 2006-2010"),
                ), E.BODY(
                    E.H1("Eliezer Yudkowsky blog posts, 2006-2010"),
                    E.H3("In sequence order:"),
                    E.UL(E.LI(E.A("Sequences", href="seq.html"))),
                    E.H3("In chronological order:"),
                    E.UL(*[p.li() for p in posts])
                )
            )))

def write_sequences(sequencelist):
    print "Writing sequences"
    with open("target/seq.html", "w") as f:
        f.write(lxml.html.tostring(
            E.HTML(
                E.HEAD(
                    E.TITLE("Sequences"),
                ), E.BODY(
                    E.H1("Sequences"),
                    E.UL(*[E.LI(E.B(s.title()),
                                E.UL(*[p.li() for p in s]))
                           for s in sequencelist
                           if s.has_posts()])
                )
            )))


url = "http://lesswrong.com/lw/gn/the_martial_art_of_rationality/"
seq = itertools.count(1)
#seq = range(1,90)
scrape_all(url, seq)
#for e in sorted(blogpost.allattrs):
#    print e
